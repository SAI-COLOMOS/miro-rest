{
	// Place your área de trabajo de sai snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1')",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Crear vista": {
		"scope": "javascript,typescript",
		"prefix": "create::view",
		"body": [
			"/* Importaciones */",
			"const express = require('express')",
			"",
			"/* Varaibles */",
			"const router = express.Router()",
			"",
			"/* Rutas */",
			"router.get('$1', (req, res, next) => {",
			"\t// Aquí va lo que quieras que haga",
			"})",
			"",
			"router.post('$1', (req, res, next) => {",
			"\t// Aquí va lo que quieras que haga",
			"})",
			"",
			"router.put('$1', (req, res, next) => {",
			"\t// Aquí va lo que quieras que haga",
			"})",
			"",
			"router.delete('$1', (req, res, next) => {",
			"\t// Aquí va lo que quieras que haga",
			"})",
			"",
			"/* Exportaciones */",
			"module.exports = router",
		],
		"description": "Retorna un bloque de código para la declaración de una vista simple."
	},
	"Crear respuesta": {
		"scope": "javascript, typescript",
		"prefix": "create::response",
		"body": [
			"return res.status($1).json({",
			"\tmessage: `$2`",
			"})"
		],
		"description": "Retorna una plantilla de respuesta"
	},
	"Crear validación de un campo obligatorio": {
		"scope": "javascript, typescript",
		"prefix": "create::requiredValidation",
		"body": [
			"req.body.$1 ?",
			"\ttypeof req.body.$1 === '$2' ? null",
			"\t\t: __ThrowError(`El campo '$1' debe ser tipo '$2'`)",
			"\t: __ThrowError(`El campo '$1' es obligatorio`)"
		],
		"description": "Retorna una plantilla de respuesta obligatoria"
	},
	"Crear validación de un campo opcional": {
		"scope": "javascript, typescript",
		"prefix": "create::optionalValidation",
		"body": [
			"req.body.$1 ?",
			"\ttypeof req.body.$1 === '$2' ? null",
			"\t\t: __ThrowError(`El campo '$1' debe ser tipo '$2'`)",
			"\t: null"
		],
		"description": "Retorna una plantilla de respuesta opcional"
	},
	"Crear ruta": {
		"scope": "javascript, typescript",
		"prefix": "create::route",
		"body": [
			"route.$1(`${${path}}$2`, Passport.authenticate('jwt', { session: false }), $3)",
		],
		"description": "Retorna una plantilla de una ruta general"
	}
}